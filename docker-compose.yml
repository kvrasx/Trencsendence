volumes:
    elastic:
        driver: local
    postgres_data:
        driver: local
    logs:
        driver: local

services:

    frontend:
        container_name: frontend
        build:
          context: ./Deployment/React/
        restart: unless-stopped
        volumes:
          - ./Frontend:/app
        ports:
          - "3000:3000"
        depends_on:
          - backend
        env_file:
          - .env

    backend:
        container_name: backend
        build:
          context: ./Deployment/Django/
        restart: unless-stopped
        volumes:
          - ./Backend:/app
        depends_on:
          - redis
          - postgresql
        ports:
          - 8000:8000
        env_file:
          - .env

    postgresql:
        container_name: postgresql
        image: postgres:latest
        restart: unless-stopped
        environment:
          - POSTGRES_PASSWORD=PASS
          - POSTGRES_DB=my_db
        volumes:
           - postgres_data:/var/lib/postgresql/data
    redis:
        container_name: redis
        build: ./Deployment/redis/
        restart: unless-stopped
    nginx:
        container_name: nginx
        image: nginx:latest
        restart: unless-stopped
        volumes:
          - ./Deployment/conf/nginx.conf:/etc/nginx/nginx.conf
          - logs:/var/log/nginx/
<<<<<<< HEAD
          #depends_on:
          #- filebeat
=======
          - ./Deployment/access.log:/var/log/nginx/access.log
        depends_on:
          - filebeat
          - frontend
          - elasticsearch
>>>>>>> master
        ports:
          - "8080:80"
  
<<<<<<< HEAD
#    filebeat:
#        container_name: filebeat
#        image: docker.elastic.co/beats/filebeat:8.17.0
#        restart: unless-stopped
#        volumes:
#          - ./Deployment/conf/filebeat.yml:/usr/share/filebeat/filebeat.yml
#          - logs:/var/log/nginx/
#        command: filebeat -e
#        depends_on:
#          - logstash
#    
#    logstash:
#        container_name: logstash
#        image: docker.elastic.co/logstash/logstash:8.17.0
#        restart: unless-stopped
#        volumes:
#        - ./Deployment/conf/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
#        depends_on:
#          - elasticsearch
#
#    elasticsearch:
#        container_name: elasticsearch
#        image: docker.elastic.co/elasticsearch/elasticsearch:8.17.0
#        volumes:
#          - elastic:/usr/share/elasticsearch/data
#          - ./Deployment/conf/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
#        restart: unless-stopped
#
#    kibana:
#        image: docker.elastic.co/kibana/kibana:8.17.0
#        container_name: kibana
#        environment:
#          - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
#        ports:
#          - "5601:5601"
#        depends_on:
#          - elasticsearch
#        restart: unless-stopped
=======
    filebeat:
        container_name: filebeat
        image: docker.elastic.co/beats/filebeat:8.17.0
        restart: unless-stopped
        volumes:
          - ./Deployment/conf/filebeat.yml:/usr/share/filebeat/filebeat.yml
          - logs:/var/log/nginx/
        command: filebeat -e
        depends_on:
          - logstash
   
    logstash:
        container_name: logstash
        image: docker.elastic.co/logstash/logstash:8.17.0
        restart: unless-stopped
        volumes:
        - ./Deployment/conf/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
        - ./Deployment/access.log:/var/log/nginx/access.log
        depends_on:
          - elasticsearch

    elasticsearch:
        container_name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:8.17.0
        volumes:
          - elastic:/usr/share/elasticsearch/data
          - ./Deployment/conf/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
        ports:
          - "9200:9200"
        restart: unless-stopped

    kibana:
        image: docker.elastic.co/kibana/kibana:8.17.0
        container_name: kibana
        environment:
          - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
        volumes:
          - ./Deployment/export.ndjson:/dashboard.ndjson
        ports:
          - "5601:5601"
        depends_on:
          - elasticsearch
        restart: unless-stopped

>>>>>>> master
